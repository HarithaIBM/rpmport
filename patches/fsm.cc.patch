diff --git a/lib/fsm.cc b/lib/fsm.cc
index 63580c2..442557a 100644
--- a/lib/fsm.cc
+++ b/lib/fsm.cc
@@ -4,6 +4,10 @@
  */
 
 #include "system.h"
+#if defined(__MVS__)
+#include <sys/time.h>
+#include <sys/sys_time.h>
+#endif
 
 #include <inttypes.h>
 #include <utime.h>
@@ -26,7 +30,7 @@
 #include "rpmug.hh"
 
 #include "debug.h"
-
+#include<iostream>
 #define	_FSM_DEBUG	0
 int _fsm_debug = _FSM_DEBUG;
 
@@ -99,7 +103,7 @@ static int fsmLink(int odirfd, const char *opath, int dirfd, const char *path)
 static int cap_set_fileat(int dirfd, const char *path, cap_t fcaps)
 {
     int fd = -1;
-    int rc = fsmOpenat(&fd, dirfd, path, O_RDONLY|O_NOFOLLOW, 0);
+    int rc = fsmOpenat(&fd, dirfd, path, O_RDONLY, 0);
     if (!rc) {
 	rc = cap_set_fd(fd, fcaps);
 	fsmClose(&fd);
@@ -302,7 +306,7 @@ static int fsmMkdir(int dirfd, const char *path, mode_t mode)
 static int fsmOpenat(int *wfdp, int dirfd, const char *path, int flags, int dir)
 {
     struct stat lsb, sb;
-    int sflags = flags | O_NOFOLLOW;
+    int sflags = flags ;// | O_NOFOLLOW;
     int fd = openat(dirfd, path, sflags);
     int rc = 0;
 
@@ -360,7 +364,7 @@ static int fsmDoMkDir(rpmPlugins plugins, int dirfd, const char *dn,
 	rc = fsmMkdir(dirfd, dn, mode);
 
     if (!rc) {
-	rc = fsmOpenat(fdp, dirfd, dn, O_RDONLY|O_NOFOLLOW, 1);
+	rc = fsmOpenat(fdp, dirfd, dn, O_RDONLY, 1);
     }
 
     if (!rc) {
@@ -416,7 +420,9 @@ static int ensureDir(rpmPlugins plugins, const char *p, int owned, int create,
 
     if (rc) {
 	if (!quiet) {
+	    std::cout<<"lib_fsm.cc before"<<std::endl;
 	    char *msg = rpmfileStrerror(rc);
+	    std::cout<<"lib_fsm.cc after"<<std::endl;
 	    rpmlog(RPMLOG_ERR, _("failed to open dir %s of %s: %s\n"),
 		    bn, p, msg);
 	    free(msg);
@@ -615,16 +621,17 @@ static int fsmChmod(int fd, int dirfd, const char *path, mode_t mode)
     return rc;
 }
 
+/*
 static int fsmUtime(int fd, int dirfd, const char *path, mode_t mode, time_t mtime)
 {
     int rc = 0;
-    struct timespec stamps[2] = {
+    struct timeval stamps[2] = {
 	{ .tv_sec = mtime, .tv_nsec = 0 },
 	{ .tv_sec = mtime, .tv_nsec = 0 },
     };
 
     if (fd >= 0)
-	rc = futimens(fd, stamps);
+	rc = futimes(fd, stamps);
     else
 	rc = utimensat(dirfd, path, stamps, AT_SYMLINK_NOFOLLOW);
     
@@ -632,11 +639,42 @@ static int fsmUtime(int fd, int dirfd, const char *path, mode_t mode, time_t mti
 	rpmlog(RPMLOG_DEBUG, " %8s (%d - %d %s, 0x%x) %s\n", __func__,
 	       fd, dirfd, path, (unsigned)mtime, (rc < 0 ? strerror(errno) : ""));
     if (rc < 0)	rc = RPMERR_UTIME_FAILED;
-    /* ...but utime error is not critical for directories */
+    // ...but utime error is not critical for directories 
     if (rc && S_ISDIR(mode))
 	rc = 0;
     return rc;
 }
+*/ 
+
+static int fsmUtime(int fd, int dirfd, const char *path, mode_t mode, time_t mtime)
+{
+    int rc = 0;
+
+    if (fd >= 0) {
+        // futimes() expects struct timeval
+        struct timeval stamps[2] = {
+            { .tv_sec = mtime, .tv_usec = 0 },
+            { .tv_sec = mtime, .tv_usec = 0 },
+        };
+        rc = futimes(fd, stamps);
+    } else {
+        // utimensat() expects struct timespec
+        struct timespec stamps[2] = {
+            { .tv_sec = mtime, .tv_nsec = 0 },
+            { .tv_sec = mtime, .tv_nsec = 0 },
+        };
+        rc = utimensat(dirfd, path, stamps, AT_SYMLINK_NOFOLLOW);
+    }
+
+    if (_fsm_debug)
+        rpmlog(RPMLOG_DEBUG, " %8s (%d - %d %s, 0x%x) %s\n", __func__,
+               fd, dirfd, path, (unsigned)mtime, (rc < 0 ? strerror(errno) : ""));
+    if (rc < 0) rc = RPMERR_UTIME_FAILED;
+    /* ...but utime error is not critical for directories */
+    if (rc && S_ISDIR(mode))
+        rc = 0;
+    return rc;
+}
 
 static int fsmVerify(int dirfd, const char *path, rpmfi fi)
 {
@@ -1020,8 +1058,10 @@ int rpmPackageFilesInstall(rpmts ts, rpmte te, rpmfiles files,
                 }
             } else {
                 /* XXX Special case /dev/log, which shouldn't be packaged anyways */
-                if (!IS_DEV_LOG(fp->fpath))
+                if (!IS_DEV_LOG(fp->fpath)) {
                     rc = RPMERR_UNKNOWN_FILETYPE;
+		    std::cout<<"MANUALLY ADDED LOG : rpmerr_unknown_filetyype in libfsm.cc rpmPackageFilesInstallfn"<<std::endl;
+		}
             }
 
 setmeta:
