# bump: rpm-version /RPM_VERSION="(.*)"/ gitrefs:https://github.com/rpm-software-management/rpm.git|re:/rpm-([\d.]+)-release/$1/|*
RPM_VERSION="6.0.0"

export ZOPEN_BUILD_LINE="STABLE"

export ZOPEN_STABLE_URL="https://github.com/rpm-software-management/rpm/releases/download/rpm-${RPM_VERSION}-release/rpm-${RPM_VERSION}.tar.bz2"  # Specify the stable build URL (either git or tarball)
export ZOPEN_STABLE_DEPS="bash coreutils zstd unzip git gawk patch grep sed file xz tar grep cpio libgpgerror zstd popt readline lua pkgconfig cmake zlib unzip libarchive scdoc libgcrypt openssl sqlite bzip2 gzip xz gettext make autoconf automake libtool perl m4 tar libiconv gpg doxygen lz4" # Specify the stable build dependencies.

## Required IF ZOPEN_BUILD_LINE='DEV'
export ZOPEN_DEV_URL="https://github.com/rpm-software-management/rpm.git"   # Specify the dev build URL

export ZOPEN_EXTRA_CFLAGS="-D_POSIX_C_SOURCE=200809L" 
export ZOPEN_EXTRA_CPPFLAGS="-D_POSIX_C_SOURCE=200809L -D__XPLAT=1"  
export ZOPEN_SYSTEM_PREREQS="zos25"

export ZOPEN_CATEGORIES="core utilities"

export ZOPEN_SYSTEM_PREREQ=""

export ZOPEN_COMP="CLANG"
export ZOPEN_BOOTSTRAP="skip"  ## Bootstrap program to run (defaults to './bootstrap')
export ZOPEN_CONFIGURE="cmake" ## Configuration program to run (defaults to './configure')
export ZOPEN_MAKE="zopen_build"

zopen_build() {
  LIBPATH="$LPEG_HOME/lib:$LIBPATH" make "$@" CMAKE_INSTALL_PREFIX="$ZOPEN_INSTALL_DIR" CMAKE_BUILD_TYPE=Release CMAKE_EXTRA_FLAGS="-DEXTRA_CFLAGS=\"-isystem${ZOSLIB_HOME}/include $CPPFLAGS\" -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=${CXX}  -DCMAKE_C_COMPILER="$CC" -DCMAKE_C_FLAGS=\"${CPPFLAGS} ${CFLAGS}\" -DCMAKE_C_FLAGS_RELEASE=\"${CPPFLAGS} ${CFLAGS}\" -DCOMPILE_FLAGS=\"${CPPFLAGS} ${CFLAGS}\" -DCMAKE_CXX_FLAGS=\"${CPPFLAGS} ${CFLAGS}\"  -DCMAKE_CXX_LINK_LIBRARY_FLAG=\"${LDFLAGS}\"  -DCMAKE_C_LINK_LIBRARY_FLAG=\"${LDFLAGS}\" -DCMAKE_CXX_STANDARD_LIBRARIES=\"${LIBS}\"  -DCMAKE_C_STANDARD_LIBRARIES=\"${LIBS}\" -DPREFER_LUA=ON -DENABLE_LIBINTL=OFF -DLIBUV_INCLUDE_DIR=\"$LIBUV_HOME/include\" -DGETTEXT_INCLUDE_DIR="$GETTEXT_HOME/include" -DGETTEXT_LIBRARIES="$GETTEXT_HOME/lib"  -DLIBUV_LIBRARY=\"$LIBUV_HOME/lib\" -DLPEG_LIBRARY="$LPEG_HOME/lib/lpeg.x"" BUNDLED_CMAKE_FLAG="-DUSE_BUNDLED=OFF -DLIBUV_LIBRARIES="$LIBUV_HOME/lib" -DLIBUV_LIBRARY="$LIBUV_HOME/lib/libuv.a" -DLIBUV_INCLUDE_DIR="$LIBUV_HOME/include" -DUSE_BUNDLED_LUA=ON -DUSE_BUNDLED_LUV=ON -DUSE_BUNDLED_LUAJIT=OFF -DUSE_BUNDLED_TS=ON -DUSE_BUNDLED_TS_PARSERS=ON -DUSE_BUNDLED_LIBVTERM=ON -DUSE_BUNDLED_LPEG=OFF -DUSE_BUNDLED_LIBUV=OFF -DUSE_BUNDLED_MSGPACK=ON -DUSE_BUNDLED_UNIBILIUM=ON -DUSE_BUNDLED_UTF8PROC=ON -DENABLE_LIBINTL=OFF -DUSE_BUNDLED_GETTEXT=OFF" DEPS_CMAKE_FLAGS="-DCMAKE_BUILD_TYPE=Release -DCMAKE_C_STANDARD_LIBRARIES=\"${LIBS}\" -DCMAKE_CXX_STANDARD_LIBRARIES=\"${LIBS}\" -DCMAKE_CXX_LINK_LIBRARY_FLAG=\"${LDFLAGS}\"  -DCMAKE_C_LINK_LIBRARY_FLAG=\"${LDFLAGS}\"  -DZSTD_LIBRARY=\$ZSTD_HOME/lib/libzstd.a -DZSTD_INCLUDE_DIR=\$ZSTD_HOME/include -DIconv_INCLUDE_DIR=\$LIBICONV_HOME/include -DIconv_LIBRARY=\$LIBICONV_HOME/lib/libiconv.a"
}

export ZOPEN_RUNTIME_DEPS="file sed coreutils diffutils findutils grep bash gawk bzip2 gzip xz lzip patch tar unzip zstd git quilt make"

zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"

  # Echo the following information to gauge build health
  echo "actualFailures:0"
  echo "totalTests:1"
  echo "expectedFailures:0"
  echo "expectedTotalTests:1"
}

zopen_get_version()
{
  # Modify to echo the version of your tool/library
  # Rather than hardcoding the version, obtain the version by running the tool/library
  ../build/tools/rpm --version | cut -d' ' -f3
}


export ZOPEN_CONFIGURE_OPTS="-B ../build --install-prefix \$ZOPEN_INSTALL_DIR/ -DCMAKE_INSTALL_PREFIX=\$ZOPEN_INSTALL_DIR/ -DZLIB_LIBRARY=\"\$ZLIB_HOME/lib/libz.a\" -DLUA_DIR=\"\$LUA_HOME\" -DLUA_LIBRARIES=\"\$LUA_HOME/lib/liblua.a\" -DLUA_INCLUDE_DIR=\$LUA_HOME/include -DBZIP2_INCLUDE_DIR=\$BZIP2_HOME/include -DBZIP2_LIBRARIES=\$BZIP2_HOME/lib/libbz2.a -DLIBARCHIVE_DIR=\$LIBARCHIVE_HOME -DLIBARCHIVE_INCLUDE_DIR=\$LIBARCHIVE_HOME/include -DLIBARCHIVE_LIBRARY=\$LIBARCHIVE_HOME/lib/libarchive.a -DMAGIC_LIBRARY=\$FILE_HOME/lib/libmagic.a -DMAGIC_INCLUDE_DIR=\$FILE_HOME/include -DIntl_LIBRARY=\$GETTEXT_HOME/lib/libintl.a -DIntl_INCLUDE_DIR=\$GETTEXT_HOME/include/libintl.h -DWITH_READLINE=OFF -DWITH_LIBELF=OFF -DWITH_LIBDW=OFF -DWITH_LIBLZMA=OFF -DENABLE_OPENMP=OFF -DWITH_CAP=OFF -DWITH_ACL=OFF -DENABLE_PLUGINS=OFF -DWITH_AUDIT=OFF -DWITH_SELINUX=OFF -DWITH_SEQUOIA=OFF -DWITH_DBUS=OFF -DZSTD_INCLUDE_DIR=\"\${ZSTD_HOME}/include\" -DZSTD_LIBRARY=\"\${ZSTD_HOME}/lib\" -DHAVE_UNSHARE=OFF -DENABLE_PYTHON=OFF -DENABLE_CUTF8=OFF -DRPM_VENDOR=ibm -DIconv_INCLUDE_DIR=\$LIBICONV_HOME/include -DIconv_LIBRARY=\$LIBICONV_HOME/lib/libiconv.a"
export ZOPEN_MAKE_OPTS="-C ../build"
export ZOPEN_INSTALL_OPTS="-C ../build install"

zopen_append_to_env() {
cat <<ZZ
if [ ! -z "\$ZOPEN_IN_ZOPEN_BUILD" ]; then
  export ZOPEN_EXTRA_CFLAGS="\${ZOPEN_EXTRA_CFLAGS} -I\$PWD/include"
  export ZOPEN_EXTRA_CXXFLAGS="\${ZOPEN_EXTRA_CXXFLAGS} -I\$PWD/include"
  export ZOPEN_EXTRA_LDFLAGS="\${ZOPEN_EXTRA_LDFLAGS} -L\$PWD/lib"
  export ZOPEN_EXTRA_LIBS="\${ZOPEN_EXTRA_LIBS} -llibrpm -llibrpmbuild -llibrpmsign -lrpmio"
  export CMAKE_PREFIX_PATH="\$PWD/:\${CMAKE_PREFIX_PATH}"
fi
ZZ
}

zopen_append_to_zoslib_env(){
cat <<EOF
RPM_CONFIGDIR|set|PROJECT_ROOT/lib/rpm
MAGIC|set|PROJECT_ROOT/../../file/file/share/misc/magic.mgc
EOF
}
